--Covid 19 Data Exploration
--Skills used: Joins, CTE's, Temp Tables, Aggregate Functions, Creating Views, Converting Data Types

Select *
From `portolioproject-1.covid.deaths`
Where continent is not null 
order by 3,4



Select Location, date, total_cases, new_cases, total_deaths, population
From `portolioproject-1.covid.deaths`
Where continent is not null 
order by 1,2


--Total Cases vs Total Death
--Shows likelihood of dying if you contract covid in your country

Select Location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as DeathPercentage
From `portolioproject-1.covid.deaths`
Where continent is not null 
order by 1,2


--Total Cases vs Population
--Shows what percentage of population infected with Covid

Select Location, date, total_cases, total_deaths, (total_cases/population)*100 as PercentPopulation
From `portolioproject-1.covid.deaths`
Where continent is not null 
order by 1,2


--Countries with Highest Infection Rate compared to Population

Select Location, Population, MAX(total_cases) as HighestInfectionCount,  Max((total_cases/population))*100 as PercentPopulationInfected
From `portolioproject-1.covid.deaths`
Where continent is not null 
Group by Location, Population
order by PercentPopulationInfected desc


-- Countries with Highest Death Count per Population

Select Location, MAX(cast(Total_deaths as int)) as TotalDeathCount
From `portolioproject-1.covid.deaths`
Where continent is not null 
Group by Location
order by TotalDeathCount desc

-- BREAKING THINGS DOWN BY CONTINENT
-- Showing contintents with the highest death count per population

Select continent, MAX(cast(Total_deaths as int)) as TotalDeathCount
From `portolioproject-1.covid.deaths`
Where continent is not null 
Group by continent
order by TotalDeathCount desc



-- GLOBAL NUMBERS

Select SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage
From `portolioproject-1.covid.deaths`
where continent is not null 
order by 1,2

Select SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(New_Cases)*100 as DeathPercentage
From `portolioproject-1.covid.deaths`
where continent is not null 
order by date
order by 1,2




-- Total Population vs Vaccinations
-- Shows Percentage of Population that has recieved at least one Covid Vaccine

select dea.continent, dea.location, dea.date, dea.population, vac.daily_vaccinations
From `portolioproject-1.covid.deaths` dea
JOIN `portolioproject-1.covid.vaccinations` vac
  On dea.location = vac.location
  and dea.date = vac.date
Where 
dea.continent is not null
Order by 2,3

--I noticed that these numbers didn't look correct so I went back to the vaccinations data again and realized the numbers I wanted were the raw vaccinations. 

select *
from `portolioproject-1.covid.vaccinations`

select dea.continent, dea.location, dea.date, dea.population, vac.daily_vaccinations_raw
From `portolioproject-1.covid.deaths` dea
JOIN `portolioproject-1.covid.vaccinations` vac
  On dea.location = vac.location
  and dea.date = vac.date
Where 
dea.continent is not null
Order by 2,3

WITH PopvsVac (Continent, Location, Date, Population,daily_vaccinations, RollingPeopleVaccinated)
as
(
Select dea.continent, dea.location, dea.date, dea.population, vac.daily_vaccinations_raw
, SUM(CAST(vac.daily_vaccinations_raw as int)) OVER (PARTITION BY dea.Location Order by dea.location, dea.date) as 
--,(RollingPeopleVaccinated/population)*100
From `portolioproject-1.covid.deaths`dea
Join `portolioproject-1.covid.vaccinations` vac
	On dea.location = vac.location
	and dea.date = vac.date
--where dea.continent is not null 
--order by 2,3
)
Select *, (RollingPeopleVaccinated/Population)*100
FROM PopvsVac


-- Using CTE to perform Calculation on Partition By in previous query

WITH PopvsVac (Continent, Location, Date, Population, RollingPeopleVaccinated)
as()

-- Using Temp Table to perform Calculation on Partition By in previous query

DROP Table if exists #PercentPopulationVaccinated
CREATE Table #PercentPopulationVaccinated
(
Continent nvarchar(255),
Location nvarchar(255),
Date datetime,
Population numeric,
New_vaccinations numeric,
RollingPeopleVaccinated numeric
)

Insert into #PercentPopulationVaccinated
Select dea.continent, dea.location, dea.date, dea.population, vac.daily_vaccinations_raw
, SUM(CONVERT(int,vac.new_vaccinations)) OVER (Partition by dea.Location Order by dea.location, dea.Date) as RollingPeopleVaccinated
--, (RollingPeopleVaccinated/population)*100
From `portolioproject-1.covid.deaths`
Join `portolioproject-1.covid.vaccinations`
	On dea.location = vac.location
	and dea.date = vac.date
where dea.continent is not null 
--order by 2,3



